module step1(I0, I1, I2, I3, I4, a, b, c, d, e, f, g)
	input I0, I1, I2, I3, I4;
	output a, b, c, d, e, f, g;
	reg [6:0] led;
	
	always @(I0, I1, I2, I3, I4) begin
		if (I4==0)
			case({I3, I2, I1, I0})
				4'b0000: led = 7'b1111110;	// 0
				4'b0001: led = 7'b0110000;	// 1
				4'b0010: led = 7'b1101101;	// 2
				4'b0011: led = 7'b1111001;	// 3
				4'b0100: led = 7'b0110011;	// 4
				4'b0101: led = 7'b1011011;	// 5
				4'b0110: led = 7'b1011111;	// 6
				4'b0111: led = 7'b1110010;	// 7
				4'b1000: led = 7'b1111111;	// 8
				4'b1001: led = 7'b1111011;	// 9
				4'b1010: led = 7'b1110111;	// A
				4'b1011: led = 7'b0011111;	// B
				4'b1100: led = 7'b1001110;	// C
				4'b1101: led = 7'b0111101;	// D
				4'b1110: led = 7'b1001111;	// E
				4'b1111: led = 7'b1000111;	// F
				default: led = 7'b0000000; // default
			endcase
		else
			case({I3, I2, I1, I0})
				4'b0000: led = 7'b1110111;	// A
				4'b0001: led = 7'b0011111;	// B
				4'b0010: led = 7'b1001110;	// C
				4'b0011: led = 7'b0111101;	// D
				4'b0100: led = 7'b1001111;	// E
				4'b0101: led = 7'b1000111;	// F
				4'b0110: led = 7'b1111011;	// G
				4'b0111: led = 7'b0110111;	// H
				4'b1000: led = 7'b1111100;	// J
				4'b1001: led = 7'b0001110;	// L
				4'b1010: led = 7'b0010101;	// N
				4'b1011: led = 7'b1111110;	// O
				4'b1100: led = 7'b1100111;	// P
				4'b1101: led = 7'b0000101;	// R
				4'b1110: led = 7'b0111110;	// U
				4'b1111: led = 7'b0111011;	// Y
				default: led = 7'b0000000; // default
			endcase
		end
	end
	
endmodule